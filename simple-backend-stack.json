{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Simple ECS Fargate backend for Augentik",
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "Tags": [{"Key": "Name", "Value": "Augentik-VPC"}]
      }
    },
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "CidrBlock": "10.0.1.0/24",
        "AvailabilityZone": "us-east-1a",
        "MapPublicIpOnLaunch": true,
        "Tags": [{"Key": "Name", "Value": "Public-Subnet-1"}]
      }
    },
    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "CidrBlock": "10.0.2.0/24",
        "AvailabilityZone": "us-east-1b",
        "MapPublicIpOnLaunch": true,
        "Tags": [{"Key": "Name", "Value": "Public-Subnet-2"}]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [{"Key": "Name", "Value": "Augentik-IGW"}]
      }
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "InternetGatewayId": {"Ref": "InternetGateway"}
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "Tags": [{"Key": "Name", "Value": "Public-Route-Table"}]
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "AttachGateway",
      "Properties": {
        "RouteTableId": {"Ref": "PublicRouteTable"},
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {"Ref": "InternetGateway"}
      }
    },
    "PublicSubnetRouteTableAssociation1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {"Ref": "PublicSubnet1"},
        "RouteTableId": {"Ref": "PublicRouteTable"}
      }
    },
    "PublicSubnetRouteTableAssociation2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {"Ref": "PublicSubnet2"},
        "RouteTableId": {"Ref": "PublicRouteTable"}
      }
    },
    "ALBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security group for Application Load Balancer",
        "VpcId": {"Ref": "VPC"},
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 80,
            "ToPort": 80,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 443,
            "ToPort": 443,
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [{"Key": "Name", "Value": "ALB-SecurityGroup"}]
      }
    },
    "ECSSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security group for ECS tasks",
        "VpcId": {"Ref": "VPC"},
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 8000,
            "ToPort": 8000,
            "SourceSecurityGroupId": {"Ref": "ALBSecurityGroup"}
          }
        ],
        "Tags": [{"Key": "Name", "Value": "ECS-SecurityGroup"}]
      }
    },
    "ApplicationLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "DependsOn": ["PublicSubnetRouteTableAssociation1", "PublicSubnetRouteTableAssociation2", "PublicRoute"],
      "Properties": {
        "Name": "augentik-alb",
        "Scheme": "internet-facing",
        "Type": "application",
        "Subnets": [{"Ref": "PublicSubnet1"}, {"Ref": "PublicSubnet2"}],
        "SecurityGroups": [{"Ref": "ALBSecurityGroup"}],
        "Tags": [{"Key": "Name", "Value": "Augentik-ALB"}]
      }
    },
    "ECSCluster": {
      "Type": "AWS::ECS::Cluster",
      "Properties": {
        "ClusterName": "augentik-cluster",
        "CapacityProviders": ["FARGATE"],
        "Tags": [{"Key": "Name", "Value": "Augentik-Cluster"}]
      }
    },
    "TaskDefinition": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "Family": "augentik-backend",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": ["FARGATE"],
        "Cpu": "512",
        "Memory": "1024",
        "ExecutionRoleArn": "arn:aws:iam::778185677217:role/ecsTaskExecutionRole",
        "TaskRoleArn": "arn:aws:iam::778185677217:role/AugentikAmdTaskRole",
        "ContainerDefinitions": [
          {
            "Name": "augentik-backend",
            "Image": "778185677217.dkr.ecr.us-east-1.amazonaws.com/augentik-backend:amd-final",
            "Essential": true,
            "PortMappings": [
              {
                "ContainerPort": 8000,
                "Protocol": "tcp"
              }
            ],
            "Environment": [
              {"Name": "HOST", "Value": "0.0.0.0"},
              {"Name": "PORT", "Value": "8000"},
              {"Name": "CORS_ORIGINS", "Value": "https://augentik.com,https://api.augentik.com"},
              {"Name": "LLM_BINDING", "Value": "openai"},
              {"Name": "EMBEDDING_BINDING", "Value": "openai"},
              {"Name": "LLM_MODEL", "Value": "gpt-4o-mini"},
              {"Name": "EMBEDDING_MODEL", "Value": "text-embedding-3-large"},
              {"Name": "AUTH_ACCOUNTS", "Value": "amd.admin@augentik.com:SetStrongPass#2025"},
              {"Name": "TOKEN_SECRET", "Value": "amd-demo-jwt-secret-20250917"},
              {"Name": "JWT_ALGORITHM", "Value": "HS256"},
              {"Name": "WEBUI_TITLE", "Value": "Augentik - AMD Dashboard"},
              {"Name": "WEBUI_DESCRIPTION", "Value": "LightRAG Backend for AMD"}
            ],
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": "/ecs/augentik-backend",
                "awslogs-region": "us-east-1",
                "awslogs-stream-prefix": "ecs",
                "awslogs-create-group": "true"
              }
            }
          }
        ]
      }
    },
    "TargetGroup": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Name": "augentik-targets",
        "Port": 8000,
        "Protocol": "HTTP",
        "VpcId": {"Ref": "VPC"},
        "TargetType": "ip",
        "HealthCheckPath": "/health",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckIntervalSeconds": 30,
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 2,
        "UnhealthyThresholdCount": 3
      }
    },
    "ALBListener": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "Type": "forward",
            "TargetGroupArn": {"Ref": "TargetGroup"}
          }
        ],
        "LoadBalancerArn": {"Ref": "ApplicationLoadBalancer"},
        "Port": 80,
        "Protocol": "HTTP"
      }
    },
    "ECSService": {
      "Type": "AWS::ECS::Service",
      "DependsOn": "ALBListener",
      "Properties": {
        "ServiceName": "augentik-backend-service",
        "Cluster": {"Ref": "ECSCluster"},
        "LaunchType": "FARGATE",
        "TaskDefinition": {"Ref": "TaskDefinition"},
        "DesiredCount": 1,
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "ENABLED",
            "Subnets": [{"Ref": "PublicSubnet1"}, {"Ref": "PublicSubnet2"}],
            "SecurityGroups": [{"Ref": "ECSSecurityGroup"}]
          }
        },
        "LoadBalancers": [
          {
            "ContainerName": "augentik-backend",
            "ContainerPort": 8000,
            "TargetGroupArn": {"Ref": "TargetGroup"}
          }
        ]
      }
    }
  },
  "Outputs": {
    "LoadBalancerDNS": {
      "Description": "DNS name of the load balancer",
      "Value": {"Fn::GetAtt": ["ApplicationLoadBalancer", "DNSName"]},
      "Export": {"Name": "AugentikBackendDNS"}
    },
    "LoadBalancerZoneId": {
      "Description": "Hosted zone ID of the load balancer",
      "Value": {"Fn::GetAtt": ["ApplicationLoadBalancer", "CanonicalHostedZoneID"]},
      "Export": {"Name": "AugentikBackendZoneId"}
    }
  }
}